[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\conf\routes:10:1: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method simulationPage,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function. [quickfixable][0m
[0m[[0m[33mwarn[0m] [0m[0mGET     /simulation                 controllers.HomeController.simulationPage[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\conf\routes:11:1: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method evaluateDate,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function. [quickfixable][0m
[0m[[0m[33mwarn[0m] [0m[0mPOST    /evaluate-date              controllers.HomeController.evaluateDate[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\conf\routes:10:1: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method simulationPage,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function. [quickfixable][0m
[0m[[0m[33mwarn[0m] [0m[0mGET     /simulation                 controllers.HomeController.simulationPage[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\conf\routes:11:1: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method evaluateDate,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function. [quickfixable][0m
[0m[[0m[33mwarn[0m] [0m[0mPOST    /evaluate-date              controllers.HomeController.evaluateDate[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\app\models\Simulation.scala:53:69: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,[0m
[0m[[0m[33mwarn[0m] [0m[0mor use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.[0m
[0m[[0m[33mwarn[0m] [0m[0m        result.append(s"VolatilitÃ©: ${financialMetrics.volatility().formatted("%.4f")}\n")[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\app\models\Simulation.scala:54:75: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,[0m
[0m[[0m[33mwarn[0m] [0m[0mor use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.[0m
[0m[[0m[33mwarn[0m] [0m[0m        result.append(s"Ratio de Sharpe: ${financialMetrics.sharpeRatio().formatted("%.4f")}\n")[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\app\models\FinancialMetrics.scala:8:27: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following inputs: List(_), Nil[0m
[0m[[0m[33mwarn[0m] [0m[0m    prices.sliding(2).map { case List(prev, current) => (current - prev) / prev }.toList[0m
[0m[[0m[33mwarn[0m] [0m[0m                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\IdeaProjects\Projet-ProgFonctionnelle\app\models\IndicatorsMarket.scala:9:43: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following inputs: List(_), Nil[0m
[0m[[0m[33mwarn[0m] [0m[0m      val changes = prices.sliding(2).map { case List(prev, current) => current - prev }.toList[0m
[0m[[0m[33mwarn[0m] [0m[0m                                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m8 warnings found[0m
